//! no-std

trait P { type X }

given Void is P { type X = Void }

fun check<T>(_ x: T) {}

fun f0<T where T == Void>(x: T.X) {
  check<Void>(x)
}

fun f1<T, U where T == U, T is P>(x: U.X) {
  check<T.X>(x)
  let y: T.X = x
}

fun f2<T, U where T == U, T is P, U is P, T.X == U.X>(x: U.X) {
  check<T.X>(x)
  let y: T.X = x
}
