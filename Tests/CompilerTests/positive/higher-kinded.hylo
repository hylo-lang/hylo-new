//! no-std

struct A<T> {
  public let x: T
  public memberwise init
}

fun f<T :: * -> *, U>() -> T<U> { Builtin.trap() }
fun g<T :: * -> *, U>(_ x: T<U>) -> T<A<U>> { Builtin.trap() }

fun check<T>(_ x: T) {}

public fun main() {
  let x = f<A, {}>()
  check<A<Void>>(x)
  let y = g(A(x: ()))
  check<A<A<Void>>>(y)
}
