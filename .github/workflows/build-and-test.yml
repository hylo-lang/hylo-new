name: Build and Test
on: push

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        # Note: all combinations of the following will be run independently
        os: [macos-14, ubuntu-24.04, windows-2022]
        swift: ["6.1"]
        config: [release, debug]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Swift ${{ matrix.swift }} on ${{ matrix.os }} (non-Windows)
        if: ${{ runner.os != 'Windows' }}
        uses: SwiftyLab/setup-swift@latest
        with:
          swift-version: ${{ matrix.swift }}

      - uses: compnerd/gha-setup-vsdevenv@main
        with:
          winsdk: "10.0.22621.0" # Workaround for this: https://forums.swift.org/t/swiftpm-plugin-doesnt-work-with-the-latest-visual-studio-version/78183/14
          # TL;DR: The Windows SDK had a change in 10.0.26100.0 that the Swift compiler didn't account for.
          # The Swift compiler team is aware of the issue and they are going to release a fix some time.
      - name: Set up swift (Windows)
        if: ${{ runner.os == 'Windows' }}
        uses: compnerd/gha-setup-swift@v0.2.2
        with:
          branch: swift-${{ matrix.swift }}-release
          tag: ${{ matrix.swift }}-RELEASE

      - name: Verify swift version
        run: swift --version && swift --version | grep -q ${{ matrix.swift }}
        shell: bash

      # We disabled the separate build step, as it consumes extra CI time - building for testing apparently doesn't
      # reuse the build cache from here, doubling the CI time.

      - name: Build and test for ${{ matrix.swift }} on ${{ matrix.os }} in ${{ matrix.config }} mode
        run: swift test -c ${{ matrix.config }}

    runs-on: ${{ matrix.os }}
